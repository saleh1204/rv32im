
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module rv32im_project(

  //////////// CLOCK //////////
  input 		          		CLOCK_50,
  input 		          		CLOCK2_50,
  input 		          		CLOCK3_50,

  //////////// LED //////////
  output		     [8:0]		LEDG,
  output		    [17:0]		LEDR,

  //////////// KEY //////////
  input 		     [3:0]		KEY,

  //////////// SW //////////
  input 		    [17:0]		SW,

  //////////// SEG7 //////////
  output		     [6:0]		HEX0,
  output		     [6:0]		HEX1,
  output		     [6:0]		HEX2,
  output		     [6:0]		HEX3,
  output		     [6:0]		HEX4,
  output		     [6:0]		HEX5,
  output		     [6:0]		HEX6,
  output		     [6:0]		HEX7,

  //////////// LCD //////////
  output		          		LCD_BLON,
  inout 		     [7:0]		LCD_DATA,
  output		          		LCD_EN,
  output		          		LCD_ON,
  output		          		LCD_RS,
  output		          		LCD_RW,

  //////////// RS232 //////////
  input 		          		UART_CTS,
  output		          		UART_RTS,
  input 		          		UART_RXD,
  output		          		UART_TXD,

  //////////// VGA //////////
  output		     [7:0]		VGA_B,
  output		          		VGA_BLANK_N,
  output		          		VGA_CLK,
  output		     [7:0]		VGA_G,
  output		          		VGA_HS,
  output		     [7:0]		VGA_R,
  output		          		VGA_SYNC_N,
  output		          		VGA_VS,

  //////////// SRAM //////////
  output		    [19:0]		SRAM_ADDR,
  output		          		SRAM_CE_N,
  inout 		    [15:0]		SRAM_DQ,
  output		          		SRAM_LB_N,
  output		          		SRAM_OE_N,
  output		          		SRAM_UB_N,
  output		          		SRAM_WE_N
);



  RV32IM_SOC rv32imsoc (
    .ACLK(CLOCK_50),
    .ARESETN(KEY[0]),
    //////////// VGA //////////
    .VGA_B(VGA_B),
    .VGA_BLANK_N(VGA_BLANK_N),
    .VGA_CLK(VGA_CLK),
    .VGA_G(VGA_G),
    .VGA_HS(VGA_HS),
    .VGA_R(VGA_R),
    .VGA_SYNC_N(VGA_SYNC_N),
    .VGA_VS(VGA_VS),
    //////////// LED //////////
    .LEDG(LEDG),
    .LEDR(LEDR),
    //////////// SW //////////
    .SW(SW),
    //////////// SRAM //////////
    .SRAM_ADDR(SRAM_ADDR),
    .SRAM_CE_N(SRAM_CE_N),
    .SRAM_DQ(SRAM_DQ),
    .SRAM_LB_N(SRAM_LB_N),
    .SRAM_OE_N(SRAM_OE_N),
    .SRAM_UB_N(SRAM_UB_N),
    .SRAM_WE_N(SRAM_WE_N),
   //////////// SEG7 //////////
   .HEX0(HEX0),
   .HEX1(HEX1),
   .HEX2(HEX2),
   .HEX3(HEX3),
   .HEX4(HEX4),
   .HEX5(HEX5),
   .HEX6(HEX6),
   .HEX7(HEX7),
   //////////// LCD ///////////
    .LCD_BLON(LCD_BLON),
    .LCD_DATA(LCD_DATA),
    .LCD_EN(LCD_EN),
    .LCD_ON(LCD_ON),
    .LCD_RS(LCD_RS),
    .LCD_RW(LCD_RW)
  );

endmodule
