// megafunction wizard: %LPM_MULT%
// GENERATION: STANDARD
// VERSION: WM1.0
// MODULE: lpm_mult 

// ============================================================
// File Name: mul_signed.v
// Megafunction Name(s):
// 			lpm_mult
//
// Simulation Library Files(s):
// 			lpm
// ============================================================
// ************************************************************
// THIS IS A WIZARD-GENERATED FILE. DO NOT EDIT THIS FILE!
//
// 18.1.0 Build 625 09/12/2018 SJ Lite Edition
// ************************************************************


//Copyright (C) 2018  Intel Corporation. All rights reserved.
//Your use of Intel Corporation's design tools, logic functions 
//and other software and tools, and its AMPP partner logic 
//functions, and any output files from any of the foregoing 
//(including device programming or simulation files), and any 
//associated documentation or information are expressly subject 
//to the terms and conditions of the Intel Program License 
//Subscription Agreement, the Intel Quartus Prime License Agreement,
//the Intel FPGA IP License Agreement, or other applicable license
//agreement, including, without limitation, that your use is for
//the sole purpose of programming logic devices manufactured by
//Intel and sold by Intel or its authorized distributors.  Please
//refer to the applicable agreement for further details.


//lpm_mult DEVICE_FAMILY="Cyclone IV E" LPM_PIPELINE=3 LPM_REPRESENTATION="SIGNED" LPM_WIDTHA=32 LPM_WIDTHB=32 LPM_WIDTHP=64 MAXIMIZE_SPEED=9 aclr clock dataa datab result
//VERSION_BEGIN 18.1 cbx_cycloneii 2018:09:12:13:04:09:SJ cbx_lpm_add_sub 2018:09:12:13:04:09:SJ cbx_lpm_mult 2018:09:12:13:04:09:SJ cbx_mgl 2018:09:12:14:15:07:SJ cbx_nadder 2018:09:12:13:04:09:SJ cbx_padd 2018:09:12:13:04:09:SJ cbx_stratix 2018:09:12:13:04:09:SJ cbx_stratixii 2018:09:12:13:04:09:SJ cbx_util_mgl 2018:09:12:13:04:09:SJ  VERSION_END
// synthesis VERILOG_INPUT_VERSION VERILOG_2001
// altera message_off 10463



//adder DEVICE_FAMILY="Cyclone IV E" WIDTH=46 dataa datab result
//VERSION_BEGIN 18.1 cbx_mgl 2018:09:12:14:15:07:SJ cbx_stratixii 2018:09:12:13:04:09:SJ cbx_util_mgl 2018:09:12:13:04:09:SJ  VERSION_END


//adder DEVICE_FAMILY="Cyclone IV E" WIDTH=48 dataa datab result
//VERSION_BEGIN 18.1 cbx_mgl 2018:09:12:14:15:07:SJ cbx_stratixii 2018:09:12:13:04:09:SJ cbx_util_mgl 2018:09:12:13:04:09:SJ  VERSION_END

//synthesis_resources = dsp_9bit 8 lut 94 reg 178 
//synopsys translate_off
`timescale 1 ps / 1 ps
//synopsys translate_on
module  mul_signed_mult
	( 
	aclr,
	clock,
	dataa,
	datab,
	result) /* synthesis synthesis_clearbox=1 */;
	input   aclr;
	input   clock;
	input   [31:0]  dataa;
	input   [31:0]  datab;
	output   [63:0]  result;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_off
`endif
	tri0   aclr;
	tri0   clock;
`ifndef ALTERA_RESERVED_QIS
// synopsys translate_on
`endif

	wire	[45:0]	wire_add187_result;
	wire	[47:0]	wire_add191_result;
	wire  [35:0]   wire_mac_mult1_dataout;
	wire  [31:0]   wire_mac_mult3_dataout;
	wire  [31:0]   wire_mac_mult5_dataout;
	wire  [27:0]   wire_mac_mult7_dataout;
	wire  [35:0]   wire_mac_out2_dataout;
	wire  [31:0]   wire_mac_out4_dataout;
	wire  [31:0]   wire_mac_out6_dataout;
	wire  [27:0]   wire_mac_out8_dataout;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe10;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe100;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe101;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe102;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe103;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe104;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe105;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe106;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe107;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe108;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe109;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe11;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe110;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe111;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe112;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe113;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe114;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe115;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe116;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe117;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe118;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe119;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe12;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe120;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe121;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe122;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe123;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe124;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe125;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe126;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe127;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe128;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe129;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe13;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe130;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe131;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe132;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe133;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe134;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe135;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe136;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe137;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe138;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe139;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe14;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe140;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe141;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe142;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe143;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe144;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe145;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe146;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe147;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe148;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe149;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe15;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe150;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe151;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe152;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe153;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe154;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe155;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe156;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe157;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe158;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe159;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe16;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe160;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe161;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe162;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe163;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe164;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe165;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe166;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe167;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe168;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe169;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe17;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe170;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe171;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe172;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe173;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe174;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe175;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe176;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe177;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe178;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe179;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe18;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe180;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe181;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe182;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe183;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe184;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe185;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe186;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe19;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe20;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe21;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe22;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe23;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe24;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe25;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe26;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe27;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe28;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe29;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe30;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe31;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe32;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe33;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe34;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe35;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe36;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe37;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe38;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe39;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe40;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe41;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe42;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe43;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe44;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe45;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe46;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe47;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe48;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe49;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe50;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe51;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe52;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe53;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe54;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe55;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe56;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe57;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe58;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe59;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe60;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe61;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe62;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe63;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe64;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe65;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe66;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe67;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe68;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe69;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe70;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe71;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe72;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe73;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe74;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe75;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe76;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe77;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe78;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe79;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe80;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe81;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe82;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe83;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe84;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe85;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe86;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe87;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe88;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe89;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe9;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe90;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe91;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe92;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe93;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe94;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe95;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe96;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe97;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe98;
	(* ALTERA_ATTRIBUTE = {"POWER_UP_LEVEL=LOW"} *)
	reg	dffe99;
	wire  [45:0]   wire_sft188a_in;
	wire  [45:0]   wire_sft188a_out;
	wire  [45:0]   wire_sft189a_in;
	wire  [45:0]   wire_sft189a_out;
	wire  [45:0]   wire_sft190a_in;
	wire  [45:0]   wire_sft190a_out;
	wire  [47:0]   wire_sft192a_in;
	wire  [47:0]   wire_sft192a_out;
	wire  [47:0]   wire_sft193a_in;
	wire  [47:0]   wire_sft193a_out;
	wire  [47:0]   wire_sft194a_in;
	wire  [47:0]   wire_sft194a_out;
	wire clken;
	wire  w274w;
	wire  [65:0]  w555w;

	assign
		wire_add187_result = wire_sft188a_out + wire_sft189a_out;
	assign
		wire_add191_result = wire_sft192a_out + wire_sft193a_out;
	cycloneive_mac_mult   mac_mult1
	( 
	.dataa({dataa[17:0]}),
	.datab({datab[17:0]}),
	.dataout(wire_mac_mult1_dataout),
	.signa(1'b0),
	.signb(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.clk(1'b1),
	.ena(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		mac_mult1.dataa_clock = "none",
		mac_mult1.dataa_width = 18,
		mac_mult1.datab_clock = "none",
		mac_mult1.datab_width = 18,
		mac_mult1.signa_clock = "none",
		mac_mult1.signb_clock = "none",
		mac_mult1.lpm_type = "cycloneive_mac_mult";
	cycloneive_mac_mult   mac_mult3
	( 
	.dataa({dataa[17:0]}),
	.datab({datab[31:18]}),
	.dataout(wire_mac_mult3_dataout),
	.signa(1'b0),
	.signb(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.clk(1'b1),
	.ena(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		mac_mult3.dataa_clock = "none",
		mac_mult3.dataa_width = 18,
		mac_mult3.datab_clock = "none",
		mac_mult3.datab_width = 14,
		mac_mult3.signa_clock = "none",
		mac_mult3.signb_clock = "none",
		mac_mult3.lpm_type = "cycloneive_mac_mult";
	cycloneive_mac_mult   mac_mult5
	( 
	.dataa({dataa[31:18]}),
	.datab({datab[17:0]}),
	.dataout(wire_mac_mult5_dataout),
	.signa(1'b1),
	.signb(1'b0)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.clk(1'b1),
	.ena(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		mac_mult5.dataa_clock = "none",
		mac_mult5.dataa_width = 14,
		mac_mult5.datab_clock = "none",
		mac_mult5.datab_width = 18,
		mac_mult5.signa_clock = "none",
		mac_mult5.signb_clock = "none",
		mac_mult5.lpm_type = "cycloneive_mac_mult";
	cycloneive_mac_mult   mac_mult7
	( 
	.dataa({dataa[31:18]}),
	.datab({datab[31:18]}),
	.dataout(wire_mac_mult7_dataout),
	.signa(1'b1),
	.signb(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_off
	`endif
	,
	.aclr(1'b0),
	.clk(1'b1),
	.ena(1'b1)
	`ifndef FORMAL_VERIFICATION
	// synopsys translate_on
	`endif
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		mac_mult7.dataa_clock = "none",
		mac_mult7.dataa_width = 14,
		mac_mult7.datab_clock = "none",
		mac_mult7.datab_width = 14,
		mac_mult7.signa_clock = "none",
		mac_mult7.signb_clock = "none",
		mac_mult7.lpm_type = "cycloneive_mac_mult";
	cycloneive_mac_out   mac_out2
	( 
	.aclr(aclr),
	.clk(clock),
	.dataa(wire_mac_mult1_dataout),
	.dataout(wire_mac_out2_dataout),
	.ena(clken)
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		mac_out2.dataa_width = 36,
		mac_out2.output_clock = "0",
		mac_out2.lpm_type = "cycloneive_mac_out";
	cycloneive_mac_out   mac_out4
	( 
	.aclr(aclr),
	.clk(clock),
	.dataa(wire_mac_mult3_dataout),
	.dataout(wire_mac_out4_dataout),
	.ena(clken)
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		mac_out4.dataa_width = 32,
		mac_out4.output_clock = "0",
		mac_out4.lpm_type = "cycloneive_mac_out";
	cycloneive_mac_out   mac_out6
	( 
	.aclr(aclr),
	.clk(clock),
	.dataa(wire_mac_mult5_dataout),
	.dataout(wire_mac_out6_dataout),
	.ena(clken)
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		mac_out6.dataa_width = 32,
		mac_out6.output_clock = "0",
		mac_out6.lpm_type = "cycloneive_mac_out";
	cycloneive_mac_out   mac_out8
	( 
	.aclr(aclr),
	.clk(clock),
	.dataa(wire_mac_mult7_dataout),
	.dataout(wire_mac_out8_dataout),
	.ena(clken)
	// synopsys translate_off
	,
	.devclrn(1'b1),
	.devpor(1'b1)
	// synopsys translate_on
	);
	defparam
		mac_out8.dataa_width = 28,
		mac_out8.output_clock = "0",
		mac_out8.lpm_type = "cycloneive_mac_out";
	// synopsys translate_off
	initial
		dffe10 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe10 <= 1'b0;
		else if  (clken == 1'b1)   dffe10 <= wire_mac_out2_dataout[0];
	// synopsys translate_off
	initial
		dffe100 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe100 <= 1'b0;
		else if  (clken == 1'b1)   dffe100 <= wire_mac_out4_dataout[18];
	// synopsys translate_off
	initial
		dffe101 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe101 <= 1'b0;
		else if  (clken == 1'b1)   dffe101 <= wire_sft190a_out[18];
	// synopsys translate_off
	initial
		dffe102 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe102 <= 1'b0;
		else if  (clken == 1'b1)   dffe102 <= wire_sft194a_out[19];
	// synopsys translate_off
	initial
		dffe103 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe103 <= 1'b0;
		else if  (clken == 1'b1)   dffe103 <= wire_mac_out4_dataout[19];
	// synopsys translate_off
	initial
		dffe104 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe104 <= 1'b0;
		else if  (clken == 1'b1)   dffe104 <= wire_sft190a_out[19];
	// synopsys translate_off
	initial
		dffe105 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe105 <= 1'b0;
		else if  (clken == 1'b1)   dffe105 <= wire_sft194a_out[20];
	// synopsys translate_off
	initial
		dffe106 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe106 <= 1'b0;
		else if  (clken == 1'b1)   dffe106 <= wire_mac_out4_dataout[20];
	// synopsys translate_off
	initial
		dffe107 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe107 <= 1'b0;
		else if  (clken == 1'b1)   dffe107 <= wire_sft190a_out[20];
	// synopsys translate_off
	initial
		dffe108 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe108 <= 1'b0;
		else if  (clken == 1'b1)   dffe108 <= wire_sft194a_out[21];
	// synopsys translate_off
	initial
		dffe109 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe109 <= 1'b0;
		else if  (clken == 1'b1)   dffe109 <= wire_mac_out4_dataout[21];
	// synopsys translate_off
	initial
		dffe11 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe11 <= 1'b0;
		else if  (clken == 1'b1)   dffe11 <= dffe12;
	// synopsys translate_off
	initial
		dffe110 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe110 <= 1'b0;
		else if  (clken == 1'b1)   dffe110 <= wire_sft190a_out[21];
	// synopsys translate_off
	initial
		dffe111 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe111 <= 1'b0;
		else if  (clken == 1'b1)   dffe111 <= wire_sft194a_out[22];
	// synopsys translate_off
	initial
		dffe112 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe112 <= 1'b0;
		else if  (clken == 1'b1)   dffe112 <= wire_mac_out4_dataout[22];
	// synopsys translate_off
	initial
		dffe113 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe113 <= 1'b0;
		else if  (clken == 1'b1)   dffe113 <= wire_sft190a_out[22];
	// synopsys translate_off
	initial
		dffe114 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe114 <= 1'b0;
		else if  (clken == 1'b1)   dffe114 <= wire_sft194a_out[23];
	// synopsys translate_off
	initial
		dffe115 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe115 <= 1'b0;
		else if  (clken == 1'b1)   dffe115 <= wire_mac_out4_dataout[23];
	// synopsys translate_off
	initial
		dffe116 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe116 <= 1'b0;
		else if  (clken == 1'b1)   dffe116 <= wire_sft190a_out[23];
	// synopsys translate_off
	initial
		dffe117 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe117 <= 1'b0;
		else if  (clken == 1'b1)   dffe117 <= wire_sft194a_out[24];
	// synopsys translate_off
	initial
		dffe118 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe118 <= 1'b0;
		else if  (clken == 1'b1)   dffe118 <= wire_mac_out4_dataout[24];
	// synopsys translate_off
	initial
		dffe119 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe119 <= 1'b0;
		else if  (clken == 1'b1)   dffe119 <= wire_sft190a_out[24];
	// synopsys translate_off
	initial
		dffe12 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe12 <= 1'b0;
		else if  (clken == 1'b1)   dffe12 <= wire_mac_out2_dataout[1];
	// synopsys translate_off
	initial
		dffe120 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe120 <= 1'b0;
		else if  (clken == 1'b1)   dffe120 <= wire_sft194a_out[25];
	// synopsys translate_off
	initial
		dffe121 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe121 <= 1'b0;
		else if  (clken == 1'b1)   dffe121 <= wire_mac_out4_dataout[25];
	// synopsys translate_off
	initial
		dffe122 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe122 <= 1'b0;
		else if  (clken == 1'b1)   dffe122 <= wire_sft190a_out[25];
	// synopsys translate_off
	initial
		dffe123 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe123 <= 1'b0;
		else if  (clken == 1'b1)   dffe123 <= wire_sft194a_out[26];
	// synopsys translate_off
	initial
		dffe124 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe124 <= 1'b0;
		else if  (clken == 1'b1)   dffe124 <= wire_mac_out4_dataout[26];
	// synopsys translate_off
	initial
		dffe125 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe125 <= 1'b0;
		else if  (clken == 1'b1)   dffe125 <= wire_sft190a_out[26];
	// synopsys translate_off
	initial
		dffe126 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe126 <= 1'b0;
		else if  (clken == 1'b1)   dffe126 <= wire_sft194a_out[27];
	// synopsys translate_off
	initial
		dffe127 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe127 <= 1'b0;
		else if  (clken == 1'b1)   dffe127 <= wire_mac_out4_dataout[27];
	// synopsys translate_off
	initial
		dffe128 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe128 <= 1'b0;
		else if  (clken == 1'b1)   dffe128 <= wire_sft190a_out[27];
	// synopsys translate_off
	initial
		dffe129 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe129 <= 1'b0;
		else if  (clken == 1'b1)   dffe129 <= wire_sft194a_out[28];
	// synopsys translate_off
	initial
		dffe13 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe13 <= 1'b0;
		else if  (clken == 1'b1)   dffe13 <= dffe14;
	// synopsys translate_off
	initial
		dffe130 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe130 <= 1'b0;
		else if  (clken == 1'b1)   dffe130 <= wire_mac_out4_dataout[28];
	// synopsys translate_off
	initial
		dffe131 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe131 <= 1'b0;
		else if  (clken == 1'b1)   dffe131 <= wire_sft190a_out[28];
	// synopsys translate_off
	initial
		dffe132 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe132 <= 1'b0;
		else if  (clken == 1'b1)   dffe132 <= wire_sft194a_out[29];
	// synopsys translate_off
	initial
		dffe133 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe133 <= 1'b0;
		else if  (clken == 1'b1)   dffe133 <= wire_mac_out4_dataout[29];
	// synopsys translate_off
	initial
		dffe134 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe134 <= 1'b0;
		else if  (clken == 1'b1)   dffe134 <= wire_sft190a_out[29];
	// synopsys translate_off
	initial
		dffe135 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe135 <= 1'b0;
		else if  (clken == 1'b1)   dffe135 <= wire_sft194a_out[30];
	// synopsys translate_off
	initial
		dffe136 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe136 <= 1'b0;
		else if  (clken == 1'b1)   dffe136 <= wire_mac_out4_dataout[30];
	// synopsys translate_off
	initial
		dffe137 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe137 <= 1'b0;
		else if  (clken == 1'b1)   dffe137 <= wire_sft190a_out[30];
	// synopsys translate_off
	initial
		dffe138 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe138 <= 1'b0;
		else if  (clken == 1'b1)   dffe138 <= wire_sft194a_out[31];
	// synopsys translate_off
	initial
		dffe139 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe139 <= 1'b0;
		else if  (clken == 1'b1)   dffe139 <= (~ wire_mac_out4_dataout[31]);
	// synopsys translate_off
	initial
		dffe14 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe14 <= 1'b0;
		else if  (clken == 1'b1)   dffe14 <= wire_mac_out2_dataout[2];
	// synopsys translate_off
	initial
		dffe140 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe140 <= 1'b0;
		else if  (clken == 1'b1)   dffe140 <= wire_sft190a_out[31];
	// synopsys translate_off
	initial
		dffe141 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe141 <= 1'b0;
		else if  (clken == 1'b1)   dffe141 <= wire_sft194a_out[32];
	// synopsys translate_off
	initial
		dffe142 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe142 <= 1'b0;
		else if  (clken == 1'b1)   dffe142 <= 1'b1;
	// synopsys translate_off
	initial
		dffe143 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe143 <= 1'b0;
		else if  (clken == 1'b1)   dffe143 <= wire_sft190a_out[32];
	// synopsys translate_off
	initial
		dffe144 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe144 <= 1'b0;
		else if  (clken == 1'b1)   dffe144 <= wire_sft194a_out[33];
	// synopsys translate_off
	initial
		dffe145 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe145 <= 1'b0;
		else if  (clken == 1'b1)   dffe145 <= 1'b1;
	// synopsys translate_off
	initial
		dffe146 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe146 <= 1'b0;
		else if  (clken == 1'b1)   dffe146 <= wire_sft190a_out[33];
	// synopsys translate_off
	initial
		dffe147 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe147 <= 1'b0;
		else if  (clken == 1'b1)   dffe147 <= wire_sft194a_out[34];
	// synopsys translate_off
	initial
		dffe148 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe148 <= 1'b0;
		else if  (clken == 1'b1)   dffe148 <= 1'b1;
	// synopsys translate_off
	initial
		dffe149 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe149 <= 1'b0;
		else if  (clken == 1'b1)   dffe149 <= wire_sft190a_out[34];
	// synopsys translate_off
	initial
		dffe15 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe15 <= 1'b0;
		else if  (clken == 1'b1)   dffe15 <= dffe16;
	// synopsys translate_off
	initial
		dffe150 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe150 <= 1'b0;
		else if  (clken == 1'b1)   dffe150 <= wire_sft194a_out[35];
	// synopsys translate_off
	initial
		dffe151 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe151 <= 1'b0;
		else if  (clken == 1'b1)   dffe151 <= 1'b1;
	// synopsys translate_off
	initial
		dffe152 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe152 <= 1'b0;
		else if  (clken == 1'b1)   dffe152 <= wire_sft190a_out[35];
	// synopsys translate_off
	initial
		dffe153 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe153 <= 1'b0;
		else if  (clken == 1'b1)   dffe153 <= wire_sft194a_out[36];
	// synopsys translate_off
	initial
		dffe154 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe154 <= 1'b0;
		else if  (clken == 1'b1)   dffe154 <= 1'b1;
	// synopsys translate_off
	initial
		dffe155 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe155 <= 1'b0;
		else if  (clken == 1'b1)   dffe155 <= wire_sft190a_out[36];
	// synopsys translate_off
	initial
		dffe156 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe156 <= 1'b0;
		else if  (clken == 1'b1)   dffe156 <= wire_sft194a_out[37];
	// synopsys translate_off
	initial
		dffe157 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe157 <= 1'b0;
		else if  (clken == 1'b1)   dffe157 <= 1'b1;
	// synopsys translate_off
	initial
		dffe158 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe158 <= 1'b0;
		else if  (clken == 1'b1)   dffe158 <= wire_sft190a_out[37];
	// synopsys translate_off
	initial
		dffe159 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe159 <= 1'b0;
		else if  (clken == 1'b1)   dffe159 <= wire_sft194a_out[38];
	// synopsys translate_off
	initial
		dffe16 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe16 <= 1'b0;
		else if  (clken == 1'b1)   dffe16 <= wire_mac_out2_dataout[3];
	// synopsys translate_off
	initial
		dffe160 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe160 <= 1'b0;
		else if  (clken == 1'b1)   dffe160 <= 1'b1;
	// synopsys translate_off
	initial
		dffe161 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe161 <= 1'b0;
		else if  (clken == 1'b1)   dffe161 <= wire_sft190a_out[38];
	// synopsys translate_off
	initial
		dffe162 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe162 <= 1'b0;
		else if  (clken == 1'b1)   dffe162 <= wire_sft194a_out[39];
	// synopsys translate_off
	initial
		dffe163 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe163 <= 1'b0;
		else if  (clken == 1'b1)   dffe163 <= 1'b1;
	// synopsys translate_off
	initial
		dffe164 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe164 <= 1'b0;
		else if  (clken == 1'b1)   dffe164 <= wire_sft190a_out[39];
	// synopsys translate_off
	initial
		dffe165 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe165 <= 1'b0;
		else if  (clken == 1'b1)   dffe165 <= wire_sft194a_out[40];
	// synopsys translate_off
	initial
		dffe166 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe166 <= 1'b0;
		else if  (clken == 1'b1)   dffe166 <= 1'b1;
	// synopsys translate_off
	initial
		dffe167 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe167 <= 1'b0;
		else if  (clken == 1'b1)   dffe167 <= wire_sft190a_out[40];
	// synopsys translate_off
	initial
		dffe168 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe168 <= 1'b0;
		else if  (clken == 1'b1)   dffe168 <= wire_sft194a_out[41];
	// synopsys translate_off
	initial
		dffe169 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe169 <= 1'b0;
		else if  (clken == 1'b1)   dffe169 <= 1'b1;
	// synopsys translate_off
	initial
		dffe17 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe17 <= 1'b0;
		else if  (clken == 1'b1)   dffe17 <= dffe18;
	// synopsys translate_off
	initial
		dffe170 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe170 <= 1'b0;
		else if  (clken == 1'b1)   dffe170 <= wire_sft190a_out[41];
	// synopsys translate_off
	initial
		dffe171 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe171 <= 1'b0;
		else if  (clken == 1'b1)   dffe171 <= wire_sft194a_out[42];
	// synopsys translate_off
	initial
		dffe172 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe172 <= 1'b0;
		else if  (clken == 1'b1)   dffe172 <= 1'b1;
	// synopsys translate_off
	initial
		dffe173 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe173 <= 1'b0;
		else if  (clken == 1'b1)   dffe173 <= wire_sft190a_out[42];
	// synopsys translate_off
	initial
		dffe174 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe174 <= 1'b0;
		else if  (clken == 1'b1)   dffe174 <= wire_sft194a_out[43];
	// synopsys translate_off
	initial
		dffe175 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe175 <= 1'b0;
		else if  (clken == 1'b1)   dffe175 <= 1'b1;
	// synopsys translate_off
	initial
		dffe176 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe176 <= 1'b0;
		else if  (clken == 1'b1)   dffe176 <= wire_sft190a_out[43];
	// synopsys translate_off
	initial
		dffe177 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe177 <= 1'b0;
		else if  (clken == 1'b1)   dffe177 <= wire_sft194a_out[44];
	// synopsys translate_off
	initial
		dffe178 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe178 <= 1'b0;
		else if  (clken == 1'b1)   dffe178 <= 1'b1;
	// synopsys translate_off
	initial
		dffe179 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe179 <= 1'b0;
		else if  (clken == 1'b1)   dffe179 <= wire_sft190a_out[44];
	// synopsys translate_off
	initial
		dffe18 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe18 <= 1'b0;
		else if  (clken == 1'b1)   dffe18 <= wire_mac_out2_dataout[4];
	// synopsys translate_off
	initial
		dffe180 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe180 <= 1'b0;
		else if  (clken == 1'b1)   dffe180 <= wire_sft194a_out[45];
	// synopsys translate_off
	initial
		dffe181 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe181 <= 1'b0;
		else if  (clken == 1'b1)   dffe181 <= (~ wire_mac_out8_dataout[27]);
	// synopsys translate_off
	initial
		dffe182 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe182 <= 1'b0;
		else if  (clken == 1'b1)   dffe182 <= wire_sft190a_out[45];
	// synopsys translate_off
	initial
		dffe183 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe183 <= 1'b0;
		else if  (clken == 1'b1)   dffe183 <= wire_sft194a_out[46];
	// synopsys translate_off
	initial
		dffe184 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe184 <= 1'b0;
		else if  (clken == 1'b1)   dffe184 <= 1'b1;
	// synopsys translate_off
	initial
		dffe185 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe185 <= 1'b0;
		else if  (clken == 1'b1)   dffe185 <= wire_sft194a_out[47];
	// synopsys translate_off
	initial
		dffe186 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe186 <= 1'b0;
		else if  (clken == 1'b1)   dffe186 <= 1'b1;
	// synopsys translate_off
	initial
		dffe19 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe19 <= 1'b0;
		else if  (clken == 1'b1)   dffe19 <= dffe20;
	// synopsys translate_off
	initial
		dffe20 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe20 <= 1'b0;
		else if  (clken == 1'b1)   dffe20 <= wire_mac_out2_dataout[5];
	// synopsys translate_off
	initial
		dffe21 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe21 <= 1'b0;
		else if  (clken == 1'b1)   dffe21 <= dffe22;
	// synopsys translate_off
	initial
		dffe22 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe22 <= 1'b0;
		else if  (clken == 1'b1)   dffe22 <= wire_mac_out2_dataout[6];
	// synopsys translate_off
	initial
		dffe23 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe23 <= 1'b0;
		else if  (clken == 1'b1)   dffe23 <= dffe24;
	// synopsys translate_off
	initial
		dffe24 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe24 <= 1'b0;
		else if  (clken == 1'b1)   dffe24 <= wire_mac_out2_dataout[7];
	// synopsys translate_off
	initial
		dffe25 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe25 <= 1'b0;
		else if  (clken == 1'b1)   dffe25 <= dffe26;
	// synopsys translate_off
	initial
		dffe26 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe26 <= 1'b0;
		else if  (clken == 1'b1)   dffe26 <= wire_mac_out2_dataout[8];
	// synopsys translate_off
	initial
		dffe27 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe27 <= 1'b0;
		else if  (clken == 1'b1)   dffe27 <= dffe28;
	// synopsys translate_off
	initial
		dffe28 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe28 <= 1'b0;
		else if  (clken == 1'b1)   dffe28 <= wire_mac_out2_dataout[9];
	// synopsys translate_off
	initial
		dffe29 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe29 <= 1'b0;
		else if  (clken == 1'b1)   dffe29 <= dffe30;
	// synopsys translate_off
	initial
		dffe30 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe30 <= 1'b0;
		else if  (clken == 1'b1)   dffe30 <= wire_mac_out2_dataout[10];
	// synopsys translate_off
	initial
		dffe31 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe31 <= 1'b0;
		else if  (clken == 1'b1)   dffe31 <= dffe32;
	// synopsys translate_off
	initial
		dffe32 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe32 <= 1'b0;
		else if  (clken == 1'b1)   dffe32 <= wire_mac_out2_dataout[11];
	// synopsys translate_off
	initial
		dffe33 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe33 <= 1'b0;
		else if  (clken == 1'b1)   dffe33 <= dffe34;
	// synopsys translate_off
	initial
		dffe34 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe34 <= 1'b0;
		else if  (clken == 1'b1)   dffe34 <= wire_mac_out2_dataout[12];
	// synopsys translate_off
	initial
		dffe35 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe35 <= 1'b0;
		else if  (clken == 1'b1)   dffe35 <= dffe36;
	// synopsys translate_off
	initial
		dffe36 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe36 <= 1'b0;
		else if  (clken == 1'b1)   dffe36 <= wire_mac_out2_dataout[13];
	// synopsys translate_off
	initial
		dffe37 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe37 <= 1'b0;
		else if  (clken == 1'b1)   dffe37 <= dffe38;
	// synopsys translate_off
	initial
		dffe38 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe38 <= 1'b0;
		else if  (clken == 1'b1)   dffe38 <= wire_mac_out2_dataout[14];
	// synopsys translate_off
	initial
		dffe39 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe39 <= 1'b0;
		else if  (clken == 1'b1)   dffe39 <= dffe40;
	// synopsys translate_off
	initial
		dffe40 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe40 <= 1'b0;
		else if  (clken == 1'b1)   dffe40 <= wire_mac_out2_dataout[15];
	// synopsys translate_off
	initial
		dffe41 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe41 <= 1'b0;
		else if  (clken == 1'b1)   dffe41 <= dffe42;
	// synopsys translate_off
	initial
		dffe42 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe42 <= 1'b0;
		else if  (clken == 1'b1)   dffe42 <= wire_mac_out2_dataout[16];
	// synopsys translate_off
	initial
		dffe43 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe43 <= 1'b0;
		else if  (clken == 1'b1)   dffe43 <= dffe44;
	// synopsys translate_off
	initial
		dffe44 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe44 <= 1'b0;
		else if  (clken == 1'b1)   dffe44 <= wire_mac_out2_dataout[17];
	// synopsys translate_off
	initial
		dffe45 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe45 <= 1'b0;
		else if  (clken == 1'b1)   dffe45 <= wire_sft194a_out[0];
	// synopsys translate_off
	initial
		dffe46 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe46 <= 1'b0;
		else if  (clken == 1'b1)   dffe46 <= wire_mac_out2_dataout[18];
	// synopsys translate_off
	initial
		dffe47 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe47 <= 1'b0;
		else if  (clken == 1'b1)   dffe47 <= wire_sft190a_out[0];
	// synopsys translate_off
	initial
		dffe48 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe48 <= 1'b0;
		else if  (clken == 1'b1)   dffe48 <= wire_sft194a_out[1];
	// synopsys translate_off
	initial
		dffe49 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe49 <= 1'b0;
		else if  (clken == 1'b1)   dffe49 <= wire_mac_out2_dataout[19];
	// synopsys translate_off
	initial
		dffe50 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe50 <= 1'b0;
		else if  (clken == 1'b1)   dffe50 <= wire_sft190a_out[1];
	// synopsys translate_off
	initial
		dffe51 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe51 <= 1'b0;
		else if  (clken == 1'b1)   dffe51 <= wire_sft194a_out[2];
	// synopsys translate_off
	initial
		dffe52 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe52 <= 1'b0;
		else if  (clken == 1'b1)   dffe52 <= wire_mac_out2_dataout[20];
	// synopsys translate_off
	initial
		dffe53 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe53 <= 1'b0;
		else if  (clken == 1'b1)   dffe53 <= wire_sft190a_out[2];
	// synopsys translate_off
	initial
		dffe54 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe54 <= 1'b0;
		else if  (clken == 1'b1)   dffe54 <= wire_sft194a_out[3];
	// synopsys translate_off
	initial
		dffe55 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe55 <= 1'b0;
		else if  (clken == 1'b1)   dffe55 <= wire_mac_out2_dataout[21];
	// synopsys translate_off
	initial
		dffe56 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe56 <= 1'b0;
		else if  (clken == 1'b1)   dffe56 <= wire_sft190a_out[3];
	// synopsys translate_off
	initial
		dffe57 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe57 <= 1'b0;
		else if  (clken == 1'b1)   dffe57 <= wire_sft194a_out[4];
	// synopsys translate_off
	initial
		dffe58 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe58 <= 1'b0;
		else if  (clken == 1'b1)   dffe58 <= wire_mac_out2_dataout[22];
	// synopsys translate_off
	initial
		dffe59 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe59 <= 1'b0;
		else if  (clken == 1'b1)   dffe59 <= wire_sft190a_out[4];
	// synopsys translate_off
	initial
		dffe60 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe60 <= 1'b0;
		else if  (clken == 1'b1)   dffe60 <= wire_sft194a_out[5];
	// synopsys translate_off
	initial
		dffe61 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe61 <= 1'b0;
		else if  (clken == 1'b1)   dffe61 <= wire_mac_out2_dataout[23];
	// synopsys translate_off
	initial
		dffe62 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe62 <= 1'b0;
		else if  (clken == 1'b1)   dffe62 <= wire_sft190a_out[5];
	// synopsys translate_off
	initial
		dffe63 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe63 <= 1'b0;
		else if  (clken == 1'b1)   dffe63 <= wire_sft194a_out[6];
	// synopsys translate_off
	initial
		dffe64 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe64 <= 1'b0;
		else if  (clken == 1'b1)   dffe64 <= wire_mac_out2_dataout[24];
	// synopsys translate_off
	initial
		dffe65 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe65 <= 1'b0;
		else if  (clken == 1'b1)   dffe65 <= wire_sft190a_out[6];
	// synopsys translate_off
	initial
		dffe66 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe66 <= 1'b0;
		else if  (clken == 1'b1)   dffe66 <= wire_sft194a_out[7];
	// synopsys translate_off
	initial
		dffe67 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe67 <= 1'b0;
		else if  (clken == 1'b1)   dffe67 <= wire_mac_out2_dataout[25];
	// synopsys translate_off
	initial
		dffe68 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe68 <= 1'b0;
		else if  (clken == 1'b1)   dffe68 <= wire_sft190a_out[7];
	// synopsys translate_off
	initial
		dffe69 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe69 <= 1'b0;
		else if  (clken == 1'b1)   dffe69 <= wire_sft194a_out[8];
	// synopsys translate_off
	initial
		dffe70 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe70 <= 1'b0;
		else if  (clken == 1'b1)   dffe70 <= wire_mac_out2_dataout[26];
	// synopsys translate_off
	initial
		dffe71 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe71 <= 1'b0;
		else if  (clken == 1'b1)   dffe71 <= wire_sft190a_out[8];
	// synopsys translate_off
	initial
		dffe72 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe72 <= 1'b0;
		else if  (clken == 1'b1)   dffe72 <= wire_sft194a_out[9];
	// synopsys translate_off
	initial
		dffe73 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe73 <= 1'b0;
		else if  (clken == 1'b1)   dffe73 <= wire_mac_out2_dataout[27];
	// synopsys translate_off
	initial
		dffe74 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe74 <= 1'b0;
		else if  (clken == 1'b1)   dffe74 <= wire_sft190a_out[9];
	// synopsys translate_off
	initial
		dffe75 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe75 <= 1'b0;
		else if  (clken == 1'b1)   dffe75 <= wire_sft194a_out[10];
	// synopsys translate_off
	initial
		dffe76 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe76 <= 1'b0;
		else if  (clken == 1'b1)   dffe76 <= wire_mac_out2_dataout[28];
	// synopsys translate_off
	initial
		dffe77 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe77 <= 1'b0;
		else if  (clken == 1'b1)   dffe77 <= wire_sft190a_out[10];
	// synopsys translate_off
	initial
		dffe78 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe78 <= 1'b0;
		else if  (clken == 1'b1)   dffe78 <= wire_sft194a_out[11];
	// synopsys translate_off
	initial
		dffe79 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe79 <= 1'b0;
		else if  (clken == 1'b1)   dffe79 <= wire_mac_out2_dataout[29];
	// synopsys translate_off
	initial
		dffe80 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe80 <= 1'b0;
		else if  (clken == 1'b1)   dffe80 <= wire_sft190a_out[11];
	// synopsys translate_off
	initial
		dffe81 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe81 <= 1'b0;
		else if  (clken == 1'b1)   dffe81 <= wire_sft194a_out[12];
	// synopsys translate_off
	initial
		dffe82 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe82 <= 1'b0;
		else if  (clken == 1'b1)   dffe82 <= wire_mac_out2_dataout[30];
	// synopsys translate_off
	initial
		dffe83 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe83 <= 1'b0;
		else if  (clken == 1'b1)   dffe83 <= wire_sft190a_out[12];
	// synopsys translate_off
	initial
		dffe84 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe84 <= 1'b0;
		else if  (clken == 1'b1)   dffe84 <= wire_sft194a_out[13];
	// synopsys translate_off
	initial
		dffe85 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe85 <= 1'b0;
		else if  (clken == 1'b1)   dffe85 <= wire_mac_out2_dataout[31];
	// synopsys translate_off
	initial
		dffe86 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe86 <= 1'b0;
		else if  (clken == 1'b1)   dffe86 <= wire_sft190a_out[13];
	// synopsys translate_off
	initial
		dffe87 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe87 <= 1'b0;
		else if  (clken == 1'b1)   dffe87 <= wire_sft194a_out[14];
	// synopsys translate_off
	initial
		dffe88 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe88 <= 1'b0;
		else if  (clken == 1'b1)   dffe88 <= wire_mac_out2_dataout[32];
	// synopsys translate_off
	initial
		dffe89 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe89 <= 1'b0;
		else if  (clken == 1'b1)   dffe89 <= wire_sft190a_out[14];
	// synopsys translate_off
	initial
		dffe9 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe9 <= 1'b0;
		else if  (clken == 1'b1)   dffe9 <= dffe10;
	// synopsys translate_off
	initial
		dffe90 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe90 <= 1'b0;
		else if  (clken == 1'b1)   dffe90 <= wire_sft194a_out[15];
	// synopsys translate_off
	initial
		dffe91 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe91 <= 1'b0;
		else if  (clken == 1'b1)   dffe91 <= wire_mac_out2_dataout[33];
	// synopsys translate_off
	initial
		dffe92 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe92 <= 1'b0;
		else if  (clken == 1'b1)   dffe92 <= wire_sft190a_out[15];
	// synopsys translate_off
	initial
		dffe93 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe93 <= 1'b0;
		else if  (clken == 1'b1)   dffe93 <= wire_sft194a_out[16];
	// synopsys translate_off
	initial
		dffe94 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe94 <= 1'b0;
		else if  (clken == 1'b1)   dffe94 <= wire_mac_out2_dataout[34];
	// synopsys translate_off
	initial
		dffe95 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe95 <= 1'b0;
		else if  (clken == 1'b1)   dffe95 <= wire_sft190a_out[16];
	// synopsys translate_off
	initial
		dffe96 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe96 <= 1'b0;
		else if  (clken == 1'b1)   dffe96 <= wire_sft194a_out[17];
	// synopsys translate_off
	initial
		dffe97 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe97 <= 1'b0;
		else if  (clken == 1'b1)   dffe97 <= wire_mac_out2_dataout[35];
	// synopsys translate_off
	initial
		dffe98 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe98 <= 1'b0;
		else if  (clken == 1'b1)   dffe98 <= wire_sft190a_out[17];
	// synopsys translate_off
	initial
		dffe99 = 0;
	// synopsys translate_on
	always @ ( posedge clock or  posedge aclr)
		if (aclr == 1'b1) dffe99 <= 1'b0;
		else if  (clken == 1'b1)   dffe99 <= wire_sft194a_out[18];
	soft   sft188a_0
	( 
	.in(wire_sft188a_in[0:0]),
	.out(wire_sft188a_out[0:0]));
	soft   sft188a_1
	( 
	.in(wire_sft188a_in[1:1]),
	.out(wire_sft188a_out[1:1]));
	soft   sft188a_2
	( 
	.in(wire_sft188a_in[2:2]),
	.out(wire_sft188a_out[2:2]));
	soft   sft188a_3
	( 
	.in(wire_sft188a_in[3:3]),
	.out(wire_sft188a_out[3:3]));
	soft   sft188a_4
	( 
	.in(wire_sft188a_in[4:4]),
	.out(wire_sft188a_out[4:4]));
	soft   sft188a_5
	( 
	.in(wire_sft188a_in[5:5]),
	.out(wire_sft188a_out[5:5]));
	soft   sft188a_6
	( 
	.in(wire_sft188a_in[6:6]),
	.out(wire_sft188a_out[6:6]));
	soft   sft188a_7
	( 
	.in(wire_sft188a_in[7:7]),
	.out(wire_sft188a_out[7:7]));
	soft   sft188a_8
	( 
	.in(wire_sft188a_in[8:8]),
	.out(wire_sft188a_out[8:8]));
	soft   sft188a_9
	( 
	.in(wire_sft188a_in[9:9]),
	.out(wire_sft188a_out[9:9]));
	soft   sft188a_10
	( 
	.in(wire_sft188a_in[10:10]),
	.out(wire_sft188a_out[10:10]));
	soft   sft188a_11
	( 
	.in(wire_sft188a_in[11:11]),
	.out(wire_sft188a_out[11:11]));
	soft   sft188a_12
	( 
	.in(wire_sft188a_in[12:12]),
	.out(wire_sft188a_out[12:12]));
	soft   sft188a_13
	( 
	.in(wire_sft188a_in[13:13]),
	.out(wire_sft188a_out[13:13]));
	soft   sft188a_14
	( 
	.in(wire_sft188a_in[14:14]),
	.out(wire_sft188a_out[14:14]));
	soft   sft188a_15
	( 
	.in(wire_sft188a_in[15:15]),
	.out(wire_sft188a_out[15:15]));
	soft   sft188a_16
	( 
	.in(wire_sft188a_in[16:16]),
	.out(wire_sft188a_out[16:16]));
	soft   sft188a_17
	( 
	.in(wire_sft188a_in[17:17]),
	.out(wire_sft188a_out[17:17]));
	soft   sft188a_18
	( 
	.in(wire_sft188a_in[18:18]),
	.out(wire_sft188a_out[18:18]));
	soft   sft188a_19
	( 
	.in(wire_sft188a_in[19:19]),
	.out(wire_sft188a_out[19:19]));
	soft   sft188a_20
	( 
	.in(wire_sft188a_in[20:20]),
	.out(wire_sft188a_out[20:20]));
	soft   sft188a_21
	( 
	.in(wire_sft188a_in[21:21]),
	.out(wire_sft188a_out[21:21]));
	soft   sft188a_22
	( 
	.in(wire_sft188a_in[22:22]),
	.out(wire_sft188a_out[22:22]));
	soft   sft188a_23
	( 
	.in(wire_sft188a_in[23:23]),
	.out(wire_sft188a_out[23:23]));
	soft   sft188a_24
	( 
	.in(wire_sft188a_in[24:24]),
	.out(wire_sft188a_out[24:24]));
	soft   sft188a_25
	( 
	.in(wire_sft188a_in[25:25]),
	.out(wire_sft188a_out[25:25]));
	soft   sft188a_26
	( 
	.in(wire_sft188a_in[26:26]),
	.out(wire_sft188a_out[26:26]));
	soft   sft188a_27
	( 
	.in(wire_sft188a_in[27:27]),
	.out(wire_sft188a_out[27:27]));
	soft   sft188a_28
	( 
	.in(wire_sft188a_in[28:28]),
	.out(wire_sft188a_out[28:28]));
	soft   sft188a_29
	( 
	.in(wire_sft188a_in[29:29]),
	.out(wire_sft188a_out[29:29]));
	soft   sft188a_30
	( 
	.in(wire_sft188a_in[30:30]),
	.out(wire_sft188a_out[30:30]));
	soft   sft188a_31
	( 
	.in(wire_sft188a_in[31:31]),
	.out(wire_sft188a_out[31:31]));
	soft   sft188a_32
	( 
	.in(wire_sft188a_in[32:32]),
	.out(wire_sft188a_out[32:32]));
	soft   sft188a_33
	( 
	.in(wire_sft188a_in[33:33]),
	.out(wire_sft188a_out[33:33]));
	soft   sft188a_34
	( 
	.in(wire_sft188a_in[34:34]),
	.out(wire_sft188a_out[34:34]));
	soft   sft188a_35
	( 
	.in(wire_sft188a_in[35:35]),
	.out(wire_sft188a_out[35:35]));
	soft   sft188a_36
	( 
	.in(wire_sft188a_in[36:36]),
	.out(wire_sft188a_out[36:36]));
	soft   sft188a_37
	( 
	.in(wire_sft188a_in[37:37]),
	.out(wire_sft188a_out[37:37]));
	soft   sft188a_38
	( 
	.in(wire_sft188a_in[38:38]),
	.out(wire_sft188a_out[38:38]));
	soft   sft188a_39
	( 
	.in(wire_sft188a_in[39:39]),
	.out(wire_sft188a_out[39:39]));
	soft   sft188a_40
	( 
	.in(wire_sft188a_in[40:40]),
	.out(wire_sft188a_out[40:40]));
	soft   sft188a_41
	( 
	.in(wire_sft188a_in[41:41]),
	.out(wire_sft188a_out[41:41]));
	soft   sft188a_42
	( 
	.in(wire_sft188a_in[42:42]),
	.out(wire_sft188a_out[42:42]));
	soft   sft188a_43
	( 
	.in(wire_sft188a_in[43:43]),
	.out(wire_sft188a_out[43:43]));
	soft   sft188a_44
	( 
	.in(wire_sft188a_in[44:44]),
	.out(wire_sft188a_out[44:44]));
	soft   sft188a_45
	( 
	.in(wire_sft188a_in[45:45]),
	.out(wire_sft188a_out[45:45]));
	assign
		wire_sft188a_in = {w274w, {wire_mac_out8_dataout[26], {wire_mac_out8_dataout[25], {wire_mac_out8_dataout[24], {wire_mac_out8_dataout[23], {wire_mac_out8_dataout[22], {wire_mac_out8_dataout[21], {wire_mac_out8_dataout[20], {wire_mac_out8_dataout[19], {wire_mac_out8_dataout[18], {wire_mac_out8_dataout[17], {wire_mac_out8_dataout[16], {wire_mac_out8_dataout[15], {wire_mac_out8_dataout[14], {wire_mac_out8_dataout[13], {wire_mac_out8_dataout[12], {wire_mac_out8_dataout[11], {wire_mac_out8_dataout[10], {wire_mac_out8_dataout[9], {wire_mac_out8_dataout[8], {wire_mac_out8_dataout[7], {wire_mac_out8_dataout[6], {wire_mac_out8_dataout[5], {wire_mac_out8_dataout[4], {wire_mac_out8_dataout[3], {wire_mac_out8_dataout[2], {wire_mac_out8_dataout[1], {wire_mac_out8_dataout[0], {wire_mac_out6_dataout[17], {wire_mac_out6_dataout[16], {wire_mac_out6_dataout[15], {wire_mac_out6_dataout[14], {wire_mac_out6_dataout[13], {wire_mac_out6_dataout[12], {wire_mac_out6_dataout[11], {wire_mac_out6_dataout[10], {wire_mac_out6_dataout[9], {wire_mac_out6_dataout[8], {wire_mac_out6_dataout[7], {wire_mac_out6_dataout[6], {wire_mac_out6_dataout[5], {wire_mac_out6_dataout[4], {wire_mac_out6_dataout[3], {wire_mac_out6_dataout[2], {wire_mac_out6_dataout[1:0]}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}};
	soft   sft189a_0
	( 
	.in(wire_sft189a_in[0:0]),
	.out(wire_sft189a_out[0:0]));
	soft   sft189a_1
	( 
	.in(wire_sft189a_in[1:1]),
	.out(wire_sft189a_out[1:1]));
	soft   sft189a_2
	( 
	.in(wire_sft189a_in[2:2]),
	.out(wire_sft189a_out[2:2]));
	soft   sft189a_3
	( 
	.in(wire_sft189a_in[3:3]),
	.out(wire_sft189a_out[3:3]));
	soft   sft189a_4
	( 
	.in(wire_sft189a_in[4:4]),
	.out(wire_sft189a_out[4:4]));
	soft   sft189a_5
	( 
	.in(wire_sft189a_in[5:5]),
	.out(wire_sft189a_out[5:5]));
	soft   sft189a_6
	( 
	.in(wire_sft189a_in[6:6]),
	.out(wire_sft189a_out[6:6]));
	soft   sft189a_7
	( 
	.in(wire_sft189a_in[7:7]),
	.out(wire_sft189a_out[7:7]));
	soft   sft189a_8
	( 
	.in(wire_sft189a_in[8:8]),
	.out(wire_sft189a_out[8:8]));
	soft   sft189a_9
	( 
	.in(wire_sft189a_in[9:9]),
	.out(wire_sft189a_out[9:9]));
	soft   sft189a_10
	( 
	.in(wire_sft189a_in[10:10]),
	.out(wire_sft189a_out[10:10]));
	soft   sft189a_11
	( 
	.in(wire_sft189a_in[11:11]),
	.out(wire_sft189a_out[11:11]));
	soft   sft189a_12
	( 
	.in(wire_sft189a_in[12:12]),
	.out(wire_sft189a_out[12:12]));
	soft   sft189a_13
	( 
	.in(wire_sft189a_in[13:13]),
	.out(wire_sft189a_out[13:13]));
	soft   sft189a_14
	( 
	.in(wire_sft189a_in[14:14]),
	.out(wire_sft189a_out[14:14]));
	soft   sft189a_15
	( 
	.in(wire_sft189a_in[15:15]),
	.out(wire_sft189a_out[15:15]));
	soft   sft189a_16
	( 
	.in(wire_sft189a_in[16:16]),
	.out(wire_sft189a_out[16:16]));
	soft   sft189a_17
	( 
	.in(wire_sft189a_in[17:17]),
	.out(wire_sft189a_out[17:17]));
	soft   sft189a_18
	( 
	.in(wire_sft189a_in[18:18]),
	.out(wire_sft189a_out[18:18]));
	soft   sft189a_19
	( 
	.in(wire_sft189a_in[19:19]),
	.out(wire_sft189a_out[19:19]));
	soft   sft189a_20
	( 
	.in(wire_sft189a_in[20:20]),
	.out(wire_sft189a_out[20:20]));
	soft   sft189a_21
	( 
	.in(wire_sft189a_in[21:21]),
	.out(wire_sft189a_out[21:21]));
	soft   sft189a_22
	( 
	.in(wire_sft189a_in[22:22]),
	.out(wire_sft189a_out[22:22]));
	soft   sft189a_23
	( 
	.in(wire_sft189a_in[23:23]),
	.out(wire_sft189a_out[23:23]));
	soft   sft189a_24
	( 
	.in(wire_sft189a_in[24:24]),
	.out(wire_sft189a_out[24:24]));
	soft   sft189a_25
	( 
	.in(wire_sft189a_in[25:25]),
	.out(wire_sft189a_out[25:25]));
	soft   sft189a_26
	( 
	.in(wire_sft189a_in[26:26]),
	.out(wire_sft189a_out[26:26]));
	soft   sft189a_27
	( 
	.in(wire_sft189a_in[27:27]),
	.out(wire_sft189a_out[27:27]));
	soft   sft189a_28
	( 
	.in(wire_sft189a_in[28:28]),
	.out(wire_sft189a_out[28:28]));
	soft   sft189a_29
	( 
	.in(wire_sft189a_in[29:29]),
	.out(wire_sft189a_out[29:29]));
	soft   sft189a_30
	( 
	.in(wire_sft189a_in[30:30]),
	.out(wire_sft189a_out[30:30]));
	soft   sft189a_31
	( 
	.in(wire_sft189a_in[31:31]),
	.out(wire_sft189a_out[31:31]));
	soft   sft189a_32
	( 
	.in(wire_sft189a_in[32:32]),
	.out(wire_sft189a_out[32:32]));
	soft   sft189a_33
	( 
	.in(wire_sft189a_in[33:33]),
	.out(wire_sft189a_out[33:33]));
	soft   sft189a_34
	( 
	.in(wire_sft189a_in[34:34]),
	.out(wire_sft189a_out[34:34]));
	soft   sft189a_35
	( 
	.in(wire_sft189a_in[35:35]),
	.out(wire_sft189a_out[35:35]));
	soft   sft189a_36
	( 
	.in(wire_sft189a_in[36:36]),
	.out(wire_sft189a_out[36:36]));
	soft   sft189a_37
	( 
	.in(wire_sft189a_in[37:37]),
	.out(wire_sft189a_out[37:37]));
	soft   sft189a_38
	( 
	.in(wire_sft189a_in[38:38]),
	.out(wire_sft189a_out[38:38]));
	soft   sft189a_39
	( 
	.in(wire_sft189a_in[39:39]),
	.out(wire_sft189a_out[39:39]));
	soft   sft189a_40
	( 
	.in(wire_sft189a_in[40:40]),
	.out(wire_sft189a_out[40:40]));
	soft   sft189a_41
	( 
	.in(wire_sft189a_in[41:41]),
	.out(wire_sft189a_out[41:41]));
	soft   sft189a_42
	( 
	.in(wire_sft189a_in[42:42]),
	.out(wire_sft189a_out[42:42]));
	soft   sft189a_43
	( 
	.in(wire_sft189a_in[43:43]),
	.out(wire_sft189a_out[43:43]));
	soft   sft189a_44
	( 
	.in(wire_sft189a_in[44:44]),
	.out(wire_sft189a_out[44:44]));
	soft   sft189a_45
	( 
	.in(wire_sft189a_in[45:45]),
	.out(wire_sft189a_out[45:45]));
	assign
		wire_sft189a_in = {w274w, {w274w, {w274w, {w274w, {w274w, {w274w, {w274w, {w274w, {w274w, {w274w, {w274w, {w274w, {w274w, {w274w, {(~ wire_mac_out6_dataout[31]), {wire_mac_out6_dataout[30], {wire_mac_out6_dataout[29], {wire_mac_out6_dataout[28], {wire_mac_out6_dataout[27], {wire_mac_out6_dataout[26], {wire_mac_out6_dataout[25], {wire_mac_out6_dataout[24], {wire_mac_out6_dataout[23], {wire_mac_out6_dataout[22], {wire_mac_out6_dataout[21], {wire_mac_out6_dataout[20], {wire_mac_out6_dataout[19], {wire_mac_out6_dataout[18], {wire_mac_out4_dataout[17], {wire_mac_out4_dataout[16], {wire_mac_out4_dataout[15], {wire_mac_out4_dataout[14], {wire_mac_out4_dataout[13], {wire_mac_out4_dataout[12], {wire_mac_out4_dataout[11], {wire_mac_out4_dataout[10], {wire_mac_out4_dataout[9], {wire_mac_out4_dataout[8], {wire_mac_out4_dataout[7], {wire_mac_out4_dataout[6], {wire_mac_out4_dataout[5], {wire_mac_out4_dataout[4], {wire_mac_out4_dataout[3], {wire_mac_out4_dataout[2], {wire_mac_out4_dataout[1:0]}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}};
	soft   sft190a_0
	( 
	.in(wire_sft190a_in[0:0]),
	.out(wire_sft190a_out[0:0]));
	soft   sft190a_1
	( 
	.in(wire_sft190a_in[1:1]),
	.out(wire_sft190a_out[1:1]));
	soft   sft190a_2
	( 
	.in(wire_sft190a_in[2:2]),
	.out(wire_sft190a_out[2:2]));
	soft   sft190a_3
	( 
	.in(wire_sft190a_in[3:3]),
	.out(wire_sft190a_out[3:3]));
	soft   sft190a_4
	( 
	.in(wire_sft190a_in[4:4]),
	.out(wire_sft190a_out[4:4]));
	soft   sft190a_5
	( 
	.in(wire_sft190a_in[5:5]),
	.out(wire_sft190a_out[5:5]));
	soft   sft190a_6
	( 
	.in(wire_sft190a_in[6:6]),
	.out(wire_sft190a_out[6:6]));
	soft   sft190a_7
	( 
	.in(wire_sft190a_in[7:7]),
	.out(wire_sft190a_out[7:7]));
	soft   sft190a_8
	( 
	.in(wire_sft190a_in[8:8]),
	.out(wire_sft190a_out[8:8]));
	soft   sft190a_9
	( 
	.in(wire_sft190a_in[9:9]),
	.out(wire_sft190a_out[9:9]));
	soft   sft190a_10
	( 
	.in(wire_sft190a_in[10:10]),
	.out(wire_sft190a_out[10:10]));
	soft   sft190a_11
	( 
	.in(wire_sft190a_in[11:11]),
	.out(wire_sft190a_out[11:11]));
	soft   sft190a_12
	( 
	.in(wire_sft190a_in[12:12]),
	.out(wire_sft190a_out[12:12]));
	soft   sft190a_13
	( 
	.in(wire_sft190a_in[13:13]),
	.out(wire_sft190a_out[13:13]));
	soft   sft190a_14
	( 
	.in(wire_sft190a_in[14:14]),
	.out(wire_sft190a_out[14:14]));
	soft   sft190a_15
	( 
	.in(wire_sft190a_in[15:15]),
	.out(wire_sft190a_out[15:15]));
	soft   sft190a_16
	( 
	.in(wire_sft190a_in[16:16]),
	.out(wire_sft190a_out[16:16]));
	soft   sft190a_17
	( 
	.in(wire_sft190a_in[17:17]),
	.out(wire_sft190a_out[17:17]));
	soft   sft190a_18
	( 
	.in(wire_sft190a_in[18:18]),
	.out(wire_sft190a_out[18:18]));
	soft   sft190a_19
	( 
	.in(wire_sft190a_in[19:19]),
	.out(wire_sft190a_out[19:19]));
	soft   sft190a_20
	( 
	.in(wire_sft190a_in[20:20]),
	.out(wire_sft190a_out[20:20]));
	soft   sft190a_21
	( 
	.in(wire_sft190a_in[21:21]),
	.out(wire_sft190a_out[21:21]));
	soft   sft190a_22
	( 
	.in(wire_sft190a_in[22:22]),
	.out(wire_sft190a_out[22:22]));
	soft   sft190a_23
	( 
	.in(wire_sft190a_in[23:23]),
	.out(wire_sft190a_out[23:23]));
	soft   sft190a_24
	( 
	.in(wire_sft190a_in[24:24]),
	.out(wire_sft190a_out[24:24]));
	soft   sft190a_25
	( 
	.in(wire_sft190a_in[25:25]),
	.out(wire_sft190a_out[25:25]));
	soft   sft190a_26
	( 
	.in(wire_sft190a_in[26:26]),
	.out(wire_sft190a_out[26:26]));
	soft   sft190a_27
	( 
	.in(wire_sft190a_in[27:27]),
	.out(wire_sft190a_out[27:27]));
	soft   sft190a_28
	( 
	.in(wire_sft190a_in[28:28]),
	.out(wire_sft190a_out[28:28]));
	soft   sft190a_29
	( 
	.in(wire_sft190a_in[29:29]),
	.out(wire_sft190a_out[29:29]));
	soft   sft190a_30
	( 
	.in(wire_sft190a_in[30:30]),
	.out(wire_sft190a_out[30:30]));
	soft   sft190a_31
	( 
	.in(wire_sft190a_in[31:31]),
	.out(wire_sft190a_out[31:31]));
	soft   sft190a_32
	( 
	.in(wire_sft190a_in[32:32]),
	.out(wire_sft190a_out[32:32]));
	soft   sft190a_33
	( 
	.in(wire_sft190a_in[33:33]),
	.out(wire_sft190a_out[33:33]));
	soft   sft190a_34
	( 
	.in(wire_sft190a_in[34:34]),
	.out(wire_sft190a_out[34:34]));
	soft   sft190a_35
	( 
	.in(wire_sft190a_in[35:35]),
	.out(wire_sft190a_out[35:35]));
	soft   sft190a_36
	( 
	.in(wire_sft190a_in[36:36]),
	.out(wire_sft190a_out[36:36]));
	soft   sft190a_37
	( 
	.in(wire_sft190a_in[37:37]),
	.out(wire_sft190a_out[37:37]));
	soft   sft190a_38
	( 
	.in(wire_sft190a_in[38:38]),
	.out(wire_sft190a_out[38:38]));
	soft   sft190a_39
	( 
	.in(wire_sft190a_in[39:39]),
	.out(wire_sft190a_out[39:39]));
	soft   sft190a_40
	( 
	.in(wire_sft190a_in[40:40]),
	.out(wire_sft190a_out[40:40]));
	soft   sft190a_41
	( 
	.in(wire_sft190a_in[41:41]),
	.out(wire_sft190a_out[41:41]));
	soft   sft190a_42
	( 
	.in(wire_sft190a_in[42:42]),
	.out(wire_sft190a_out[42:42]));
	soft   sft190a_43
	( 
	.in(wire_sft190a_in[43:43]),
	.out(wire_sft190a_out[43:43]));
	soft   sft190a_44
	( 
	.in(wire_sft190a_in[44:44]),
	.out(wire_sft190a_out[44:44]));
	soft   sft190a_45
	( 
	.in(wire_sft190a_in[45:45]),
	.out(wire_sft190a_out[45:45]));
	assign
		wire_sft190a_in = wire_add187_result;
	soft   sft192a_0
	( 
	.in(wire_sft192a_in[0:0]),
	.out(wire_sft192a_out[0:0]));
	soft   sft192a_1
	( 
	.in(wire_sft192a_in[1:1]),
	.out(wire_sft192a_out[1:1]));
	soft   sft192a_2
	( 
	.in(wire_sft192a_in[2:2]),
	.out(wire_sft192a_out[2:2]));
	soft   sft192a_3
	( 
	.in(wire_sft192a_in[3:3]),
	.out(wire_sft192a_out[3:3]));
	soft   sft192a_4
	( 
	.in(wire_sft192a_in[4:4]),
	.out(wire_sft192a_out[4:4]));
	soft   sft192a_5
	( 
	.in(wire_sft192a_in[5:5]),
	.out(wire_sft192a_out[5:5]));
	soft   sft192a_6
	( 
	.in(wire_sft192a_in[6:6]),
	.out(wire_sft192a_out[6:6]));
	soft   sft192a_7
	( 
	.in(wire_sft192a_in[7:7]),
	.out(wire_sft192a_out[7:7]));
	soft   sft192a_8
	( 
	.in(wire_sft192a_in[8:8]),
	.out(wire_sft192a_out[8:8]));
	soft   sft192a_9
	( 
	.in(wire_sft192a_in[9:9]),
	.out(wire_sft192a_out[9:9]));
	soft   sft192a_10
	( 
	.in(wire_sft192a_in[10:10]),
	.out(wire_sft192a_out[10:10]));
	soft   sft192a_11
	( 
	.in(wire_sft192a_in[11:11]),
	.out(wire_sft192a_out[11:11]));
	soft   sft192a_12
	( 
	.in(wire_sft192a_in[12:12]),
	.out(wire_sft192a_out[12:12]));
	soft   sft192a_13
	( 
	.in(wire_sft192a_in[13:13]),
	.out(wire_sft192a_out[13:13]));
	soft   sft192a_14
	( 
	.in(wire_sft192a_in[14:14]),
	.out(wire_sft192a_out[14:14]));
	soft   sft192a_15
	( 
	.in(wire_sft192a_in[15:15]),
	.out(wire_sft192a_out[15:15]));
	soft   sft192a_16
	( 
	.in(wire_sft192a_in[16:16]),
	.out(wire_sft192a_out[16:16]));
	soft   sft192a_17
	( 
	.in(wire_sft192a_in[17:17]),
	.out(wire_sft192a_out[17:17]));
	soft   sft192a_18
	( 
	.in(wire_sft192a_in[18:18]),
	.out(wire_sft192a_out[18:18]));
	soft   sft192a_19
	( 
	.in(wire_sft192a_in[19:19]),
	.out(wire_sft192a_out[19:19]));
	soft   sft192a_20
	( 
	.in(wire_sft192a_in[20:20]),
	.out(wire_sft192a_out[20:20]));
	soft   sft192a_21
	( 
	.in(wire_sft192a_in[21:21]),
	.out(wire_sft192a_out[21:21]));
	soft   sft192a_22
	( 
	.in(wire_sft192a_in[22:22]),
	.out(wire_sft192a_out[22:22]));
	soft   sft192a_23
	( 
	.in(wire_sft192a_in[23:23]),
	.out(wire_sft192a_out[23:23]));
	soft   sft192a_24
	( 
	.in(wire_sft192a_in[24:24]),
	.out(wire_sft192a_out[24:24]));
	soft   sft192a_25
	( 
	.in(wire_sft192a_in[25:25]),
	.out(wire_sft192a_out[25:25]));
	soft   sft192a_26
	( 
	.in(wire_sft192a_in[26:26]),
	.out(wire_sft192a_out[26:26]));
	soft   sft192a_27
	( 
	.in(wire_sft192a_in[27:27]),
	.out(wire_sft192a_out[27:27]));
	soft   sft192a_28
	( 
	.in(wire_sft192a_in[28:28]),
	.out(wire_sft192a_out[28:28]));
	soft   sft192a_29
	( 
	.in(wire_sft192a_in[29:29]),
	.out(wire_sft192a_out[29:29]));
	soft   sft192a_30
	( 
	.in(wire_sft192a_in[30:30]),
	.out(wire_sft192a_out[30:30]));
	soft   sft192a_31
	( 
	.in(wire_sft192a_in[31:31]),
	.out(wire_sft192a_out[31:31]));
	soft   sft192a_32
	( 
	.in(wire_sft192a_in[32:32]),
	.out(wire_sft192a_out[32:32]));
	soft   sft192a_33
	( 
	.in(wire_sft192a_in[33:33]),
	.out(wire_sft192a_out[33:33]));
	soft   sft192a_34
	( 
	.in(wire_sft192a_in[34:34]),
	.out(wire_sft192a_out[34:34]));
	soft   sft192a_35
	( 
	.in(wire_sft192a_in[35:35]),
	.out(wire_sft192a_out[35:35]));
	soft   sft192a_36
	( 
	.in(wire_sft192a_in[36:36]),
	.out(wire_sft192a_out[36:36]));
	soft   sft192a_37
	( 
	.in(wire_sft192a_in[37:37]),
	.out(wire_sft192a_out[37:37]));
	soft   sft192a_38
	( 
	.in(wire_sft192a_in[38:38]),
	.out(wire_sft192a_out[38:38]));
	soft   sft192a_39
	( 
	.in(wire_sft192a_in[39:39]),
	.out(wire_sft192a_out[39:39]));
	soft   sft192a_40
	( 
	.in(wire_sft192a_in[40:40]),
	.out(wire_sft192a_out[40:40]));
	soft   sft192a_41
	( 
	.in(wire_sft192a_in[41:41]),
	.out(wire_sft192a_out[41:41]));
	soft   sft192a_42
	( 
	.in(wire_sft192a_in[42:42]),
	.out(wire_sft192a_out[42:42]));
	soft   sft192a_43
	( 
	.in(wire_sft192a_in[43:43]),
	.out(wire_sft192a_out[43:43]));
	soft   sft192a_44
	( 
	.in(wire_sft192a_in[44:44]),
	.out(wire_sft192a_out[44:44]));
	soft   sft192a_45
	( 
	.in(wire_sft192a_in[45:45]),
	.out(wire_sft192a_out[45:45]));
	soft   sft192a_46
	( 
	.in(wire_sft192a_in[46:46]),
	.out(wire_sft192a_out[46:46]));
	soft   sft192a_47
	( 
	.in(wire_sft192a_in[47:47]),
	.out(wire_sft192a_out[47:47]));
	assign
		wire_sft192a_in = {dffe186, {dffe184, {dffe181, {dffe178, {dffe175, {dffe172, {dffe169, {dffe166, {dffe163, {dffe160, {dffe157, {dffe154, {dffe151, {dffe148, {dffe145, {dffe142, {dffe139, {dffe136, {dffe133, {dffe130, {dffe127, {dffe124, {dffe121, {dffe118, {dffe115, {dffe112, {dffe109, {dffe106, {dffe103, {dffe100, {dffe97, {dffe94, {dffe91, {dffe88, {dffe85, {dffe82, {dffe79, {dffe76, {dffe73, {dffe70, {dffe67, {dffe64, {dffe61, {dffe58, {dffe55, {dffe52, {dffe49, dffe46}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}};
	soft   sft193a_0
	( 
	.in(wire_sft193a_in[0:0]),
	.out(wire_sft193a_out[0:0]));
	soft   sft193a_1
	( 
	.in(wire_sft193a_in[1:1]),
	.out(wire_sft193a_out[1:1]));
	soft   sft193a_2
	( 
	.in(wire_sft193a_in[2:2]),
	.out(wire_sft193a_out[2:2]));
	soft   sft193a_3
	( 
	.in(wire_sft193a_in[3:3]),
	.out(wire_sft193a_out[3:3]));
	soft   sft193a_4
	( 
	.in(wire_sft193a_in[4:4]),
	.out(wire_sft193a_out[4:4]));
	soft   sft193a_5
	( 
	.in(wire_sft193a_in[5:5]),
	.out(wire_sft193a_out[5:5]));
	soft   sft193a_6
	( 
	.in(wire_sft193a_in[6:6]),
	.out(wire_sft193a_out[6:6]));
	soft   sft193a_7
	( 
	.in(wire_sft193a_in[7:7]),
	.out(wire_sft193a_out[7:7]));
	soft   sft193a_8
	( 
	.in(wire_sft193a_in[8:8]),
	.out(wire_sft193a_out[8:8]));
	soft   sft193a_9
	( 
	.in(wire_sft193a_in[9:9]),
	.out(wire_sft193a_out[9:9]));
	soft   sft193a_10
	( 
	.in(wire_sft193a_in[10:10]),
	.out(wire_sft193a_out[10:10]));
	soft   sft193a_11
	( 
	.in(wire_sft193a_in[11:11]),
	.out(wire_sft193a_out[11:11]));
	soft   sft193a_12
	( 
	.in(wire_sft193a_in[12:12]),
	.out(wire_sft193a_out[12:12]));
	soft   sft193a_13
	( 
	.in(wire_sft193a_in[13:13]),
	.out(wire_sft193a_out[13:13]));
	soft   sft193a_14
	( 
	.in(wire_sft193a_in[14:14]),
	.out(wire_sft193a_out[14:14]));
	soft   sft193a_15
	( 
	.in(wire_sft193a_in[15:15]),
	.out(wire_sft193a_out[15:15]));
	soft   sft193a_16
	( 
	.in(wire_sft193a_in[16:16]),
	.out(wire_sft193a_out[16:16]));
	soft   sft193a_17
	( 
	.in(wire_sft193a_in[17:17]),
	.out(wire_sft193a_out[17:17]));
	soft   sft193a_18
	( 
	.in(wire_sft193a_in[18:18]),
	.out(wire_sft193a_out[18:18]));
	soft   sft193a_19
	( 
	.in(wire_sft193a_in[19:19]),
	.out(wire_sft193a_out[19:19]));
	soft   sft193a_20
	( 
	.in(wire_sft193a_in[20:20]),
	.out(wire_sft193a_out[20:20]));
	soft   sft193a_21
	( 
	.in(wire_sft193a_in[21:21]),
	.out(wire_sft193a_out[21:21]));
	soft   sft193a_22
	( 
	.in(wire_sft193a_in[22:22]),
	.out(wire_sft193a_out[22:22]));
	soft   sft193a_23
	( 
	.in(wire_sft193a_in[23:23]),
	.out(wire_sft193a_out[23:23]));
	soft   sft193a_24
	( 
	.in(wire_sft193a_in[24:24]),
	.out(wire_sft193a_out[24:24]));
	soft   sft193a_25
	( 
	.in(wire_sft193a_in[25:25]),
	.out(wire_sft193a_out[25:25]));
	soft   sft193a_26
	( 
	.in(wire_sft193a_in[26:26]),
	.out(wire_sft193a_out[26:26]));
	soft   sft193a_27
	( 
	.in(wire_sft193a_in[27:27]),
	.out(wire_sft193a_out[27:27]));
	soft   sft193a_28
	( 
	.in(wire_sft193a_in[28:28]),
	.out(wire_sft193a_out[28:28]));
	soft   sft193a_29
	( 
	.in(wire_sft193a_in[29:29]),
	.out(wire_sft193a_out[29:29]));
	soft   sft193a_30
	( 
	.in(wire_sft193a_in[30:30]),
	.out(wire_sft193a_out[30:30]));
	soft   sft193a_31
	( 
	.in(wire_sft193a_in[31:31]),
	.out(wire_sft193a_out[31:31]));
	soft   sft193a_32
	( 
	.in(wire_sft193a_in[32:32]),
	.out(wire_sft193a_out[32:32]));
	soft   sft193a_33
	( 
	.in(wire_sft193a_in[33:33]),
	.out(wire_sft193a_out[33:33]));
	soft   sft193a_34
	( 
	.in(wire_sft193a_in[34:34]),
	.out(wire_sft193a_out[34:34]));
	soft   sft193a_35
	( 
	.in(wire_sft193a_in[35:35]),
	.out(wire_sft193a_out[35:35]));
	soft   sft193a_36
	( 
	.in(wire_sft193a_in[36:36]),
	.out(wire_sft193a_out[36:36]));
	soft   sft193a_37
	( 
	.in(wire_sft193a_in[37:37]),
	.out(wire_sft193a_out[37:37]));
	soft   sft193a_38
	( 
	.in(wire_sft193a_in[38:38]),
	.out(wire_sft193a_out[38:38]));
	soft   sft193a_39
	( 
	.in(wire_sft193a_in[39:39]),
	.out(wire_sft193a_out[39:39]));
	soft   sft193a_40
	( 
	.in(wire_sft193a_in[40:40]),
	.out(wire_sft193a_out[40:40]));
	soft   sft193a_41
	( 
	.in(wire_sft193a_in[41:41]),
	.out(wire_sft193a_out[41:41]));
	soft   sft193a_42
	( 
	.in(wire_sft193a_in[42:42]),
	.out(wire_sft193a_out[42:42]));
	soft   sft193a_43
	( 
	.in(wire_sft193a_in[43:43]),
	.out(wire_sft193a_out[43:43]));
	soft   sft193a_44
	( 
	.in(wire_sft193a_in[44:44]),
	.out(wire_sft193a_out[44:44]));
	soft   sft193a_45
	( 
	.in(wire_sft193a_in[45:45]),
	.out(wire_sft193a_out[45:45]));
	soft   sft193a_46
	( 
	.in(wire_sft193a_in[46:46]),
	.out(wire_sft193a_out[46:46]));
	soft   sft193a_47
	( 
	.in(wire_sft193a_in[47:47]),
	.out(wire_sft193a_out[47:47]));
	assign
		wire_sft193a_in = {w274w, {w274w, {dffe182, {dffe179, {dffe176, {dffe173, {dffe170, {dffe167, {dffe164, {dffe161, {dffe158, {dffe155, {dffe152, {dffe149, {dffe146, {dffe143, {dffe140, {dffe137, {dffe134, {dffe131, {dffe128, {dffe125, {dffe122, {dffe119, {dffe116, {dffe113, {dffe110, {dffe107, {dffe104, {dffe101, {dffe98, {dffe95, {dffe92, {dffe89, {dffe86, {dffe83, {dffe80, {dffe77, {dffe74, {dffe71, {dffe68, {dffe65, {dffe62, {dffe59, {dffe56, {dffe53, {dffe50, dffe47}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}};
	soft   sft194a_0
	( 
	.in(wire_sft194a_in[0:0]),
	.out(wire_sft194a_out[0:0]));
	soft   sft194a_1
	( 
	.in(wire_sft194a_in[1:1]),
	.out(wire_sft194a_out[1:1]));
	soft   sft194a_2
	( 
	.in(wire_sft194a_in[2:2]),
	.out(wire_sft194a_out[2:2]));
	soft   sft194a_3
	( 
	.in(wire_sft194a_in[3:3]),
	.out(wire_sft194a_out[3:3]));
	soft   sft194a_4
	( 
	.in(wire_sft194a_in[4:4]),
	.out(wire_sft194a_out[4:4]));
	soft   sft194a_5
	( 
	.in(wire_sft194a_in[5:5]),
	.out(wire_sft194a_out[5:5]));
	soft   sft194a_6
	( 
	.in(wire_sft194a_in[6:6]),
	.out(wire_sft194a_out[6:6]));
	soft   sft194a_7
	( 
	.in(wire_sft194a_in[7:7]),
	.out(wire_sft194a_out[7:7]));
	soft   sft194a_8
	( 
	.in(wire_sft194a_in[8:8]),
	.out(wire_sft194a_out[8:8]));
	soft   sft194a_9
	( 
	.in(wire_sft194a_in[9:9]),
	.out(wire_sft194a_out[9:9]));
	soft   sft194a_10
	( 
	.in(wire_sft194a_in[10:10]),
	.out(wire_sft194a_out[10:10]));
	soft   sft194a_11
	( 
	.in(wire_sft194a_in[11:11]),
	.out(wire_sft194a_out[11:11]));
	soft   sft194a_12
	( 
	.in(wire_sft194a_in[12:12]),
	.out(wire_sft194a_out[12:12]));
	soft   sft194a_13
	( 
	.in(wire_sft194a_in[13:13]),
	.out(wire_sft194a_out[13:13]));
	soft   sft194a_14
	( 
	.in(wire_sft194a_in[14:14]),
	.out(wire_sft194a_out[14:14]));
	soft   sft194a_15
	( 
	.in(wire_sft194a_in[15:15]),
	.out(wire_sft194a_out[15:15]));
	soft   sft194a_16
	( 
	.in(wire_sft194a_in[16:16]),
	.out(wire_sft194a_out[16:16]));
	soft   sft194a_17
	( 
	.in(wire_sft194a_in[17:17]),
	.out(wire_sft194a_out[17:17]));
	soft   sft194a_18
	( 
	.in(wire_sft194a_in[18:18]),
	.out(wire_sft194a_out[18:18]));
	soft   sft194a_19
	( 
	.in(wire_sft194a_in[19:19]),
	.out(wire_sft194a_out[19:19]));
	soft   sft194a_20
	( 
	.in(wire_sft194a_in[20:20]),
	.out(wire_sft194a_out[20:20]));
	soft   sft194a_21
	( 
	.in(wire_sft194a_in[21:21]),
	.out(wire_sft194a_out[21:21]));
	soft   sft194a_22
	( 
	.in(wire_sft194a_in[22:22]),
	.out(wire_sft194a_out[22:22]));
	soft   sft194a_23
	( 
	.in(wire_sft194a_in[23:23]),
	.out(wire_sft194a_out[23:23]));
	soft   sft194a_24
	( 
	.in(wire_sft194a_in[24:24]),
	.out(wire_sft194a_out[24:24]));
	soft   sft194a_25
	( 
	.in(wire_sft194a_in[25:25]),
	.out(wire_sft194a_out[25:25]));
	soft   sft194a_26
	( 
	.in(wire_sft194a_in[26:26]),
	.out(wire_sft194a_out[26:26]));
	soft   sft194a_27
	( 
	.in(wire_sft194a_in[27:27]),
	.out(wire_sft194a_out[27:27]));
	soft   sft194a_28
	( 
	.in(wire_sft194a_in[28:28]),
	.out(wire_sft194a_out[28:28]));
	soft   sft194a_29
	( 
	.in(wire_sft194a_in[29:29]),
	.out(wire_sft194a_out[29:29]));
	soft   sft194a_30
	( 
	.in(wire_sft194a_in[30:30]),
	.out(wire_sft194a_out[30:30]));
	soft   sft194a_31
	( 
	.in(wire_sft194a_in[31:31]),
	.out(wire_sft194a_out[31:31]));
	soft   sft194a_32
	( 
	.in(wire_sft194a_in[32:32]),
	.out(wire_sft194a_out[32:32]));
	soft   sft194a_33
	( 
	.in(wire_sft194a_in[33:33]),
	.out(wire_sft194a_out[33:33]));
	soft   sft194a_34
	( 
	.in(wire_sft194a_in[34:34]),
	.out(wire_sft194a_out[34:34]));
	soft   sft194a_35
	( 
	.in(wire_sft194a_in[35:35]),
	.out(wire_sft194a_out[35:35]));
	soft   sft194a_36
	( 
	.in(wire_sft194a_in[36:36]),
	.out(wire_sft194a_out[36:36]));
	soft   sft194a_37
	( 
	.in(wire_sft194a_in[37:37]),
	.out(wire_sft194a_out[37:37]));
	soft   sft194a_38
	( 
	.in(wire_sft194a_in[38:38]),
	.out(wire_sft194a_out[38:38]));
	soft   sft194a_39
	( 
	.in(wire_sft194a_in[39:39]),
	.out(wire_sft194a_out[39:39]));
	soft   sft194a_40
	( 
	.in(wire_sft194a_in[40:40]),
	.out(wire_sft194a_out[40:40]));
	soft   sft194a_41
	( 
	.in(wire_sft194a_in[41:41]),
	.out(wire_sft194a_out[41:41]));
	soft   sft194a_42
	( 
	.in(wire_sft194a_in[42:42]),
	.out(wire_sft194a_out[42:42]));
	soft   sft194a_43
	( 
	.in(wire_sft194a_in[43:43]),
	.out(wire_sft194a_out[43:43]));
	soft   sft194a_44
	( 
	.in(wire_sft194a_in[44:44]),
	.out(wire_sft194a_out[44:44]));
	soft   sft194a_45
	( 
	.in(wire_sft194a_in[45:45]),
	.out(wire_sft194a_out[45:45]));
	soft   sft194a_46
	( 
	.in(wire_sft194a_in[46:46]),
	.out(wire_sft194a_out[46:46]));
	soft   sft194a_47
	( 
	.in(wire_sft194a_in[47:47]),
	.out(wire_sft194a_out[47:47]));
	assign
		wire_sft194a_in = wire_add191_result;
	assign
		clken = 1'b1,
		result = w555w[63:0],
		w274w = 1'b0,
		w555w = {dffe185, dffe183, dffe180, dffe177, dffe174, dffe171, dffe168, dffe165, dffe162, dffe159, dffe156, dffe153, dffe150, dffe147, dffe144, dffe141, dffe138, dffe135, dffe132, dffe129, dffe126, dffe123, dffe120, dffe117, dffe114, dffe111, dffe108, dffe105, dffe102, dffe99, dffe96, dffe93, dffe90, dffe87, dffe84, dffe81, dffe78, dffe75, dffe72, dffe69, dffe66, dffe63, dffe60, dffe57, dffe54, dffe51, dffe48, dffe45, dffe43, dffe41, dffe39, dffe37, dffe35, dffe33, dffe31, dffe29, dffe27, dffe25, dffe23, dffe21, dffe19, dffe17, dffe15, dffe13, dffe11, dffe9};
endmodule //mul_signed_mult
//VALID FILE


// synopsys translate_off
`timescale 1 ps / 1 ps
// synopsys translate_on
module mul_signed (
	aclr,
	clock,
	dataa,
	datab,
	result)/* synthesis synthesis_clearbox = 1 */;

	input	  aclr;
	input	  clock;
	input	[31:0]  dataa;
	input	[31:0]  datab;
	output	[63:0]  result;

	wire [63:0] sub_wire0;
	wire [63:0] result = sub_wire0[63:0];

	mul_signed_mult	mul_signed_mult_component (
				.aclr (aclr),
				.clock (clock),
				.dataa (dataa),
				.datab (datab),
				.result (sub_wire0));

endmodule

// ============================================================
// CNX file retrieval info
// ============================================================
// Retrieval info: PRIVATE: AutoSizeResult NUMERIC "1"
// Retrieval info: PRIVATE: B_isConstant NUMERIC "0"
// Retrieval info: PRIVATE: ConstantB NUMERIC "0"
// Retrieval info: PRIVATE: INTENDED_DEVICE_FAMILY STRING "Cyclone IV E"
// Retrieval info: PRIVATE: LPM_PIPELINE NUMERIC "3"
// Retrieval info: PRIVATE: Latency NUMERIC "1"
// Retrieval info: PRIVATE: SYNTH_WRAPPER_GEN_POSTFIX STRING "1"
// Retrieval info: PRIVATE: SignedMult NUMERIC "1"
// Retrieval info: PRIVATE: USE_MULT NUMERIC "1"
// Retrieval info: PRIVATE: ValidConstant NUMERIC "0"
// Retrieval info: PRIVATE: WidthA NUMERIC "32"
// Retrieval info: PRIVATE: WidthB NUMERIC "32"
// Retrieval info: PRIVATE: WidthP NUMERIC "64"
// Retrieval info: PRIVATE: aclr NUMERIC "1"
// Retrieval info: PRIVATE: clken NUMERIC "0"
// Retrieval info: PRIVATE: new_diagram STRING "1"
// Retrieval info: PRIVATE: optimize NUMERIC "1"
// Retrieval info: LIBRARY: lpm lpm.lpm_components.all
// Retrieval info: CONSTANT: LPM_HINT STRING "MAXIMIZE_SPEED=9"
// Retrieval info: CONSTANT: LPM_PIPELINE NUMERIC "3"
// Retrieval info: CONSTANT: LPM_REPRESENTATION STRING "SIGNED"
// Retrieval info: CONSTANT: LPM_TYPE STRING "LPM_MULT"
// Retrieval info: CONSTANT: LPM_WIDTHA NUMERIC "32"
// Retrieval info: CONSTANT: LPM_WIDTHB NUMERIC "32"
// Retrieval info: CONSTANT: LPM_WIDTHP NUMERIC "64"
// Retrieval info: USED_PORT: aclr 0 0 0 0 INPUT NODEFVAL "aclr"
// Retrieval info: USED_PORT: clock 0 0 0 0 INPUT NODEFVAL "clock"
// Retrieval info: USED_PORT: dataa 0 0 32 0 INPUT NODEFVAL "dataa[31..0]"
// Retrieval info: USED_PORT: datab 0 0 32 0 INPUT NODEFVAL "datab[31..0]"
// Retrieval info: USED_PORT: result 0 0 64 0 OUTPUT NODEFVAL "result[63..0]"
// Retrieval info: CONNECT: @aclr 0 0 0 0 aclr 0 0 0 0
// Retrieval info: CONNECT: @clock 0 0 0 0 clock 0 0 0 0
// Retrieval info: CONNECT: @dataa 0 0 32 0 dataa 0 0 32 0
// Retrieval info: CONNECT: @datab 0 0 32 0 datab 0 0 32 0
// Retrieval info: CONNECT: result 0 0 64 0 @result 0 0 64 0
// Retrieval info: GEN_FILE: TYPE_NORMAL mul_signed.v TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL mul_signed.inc TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL mul_signed.cmp TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL mul_signed.bsf TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL mul_signed_inst.v TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL mul_signed_bb.v TRUE
// Retrieval info: GEN_FILE: TYPE_NORMAL mul_signed_syn.v TRUE
// Retrieval info: LIB_FILE: lpm
